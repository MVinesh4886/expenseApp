<!DOCTYPE html>
<html lang="en">
  <head>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
      integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N"
      crossorigin="anonymous"
    />
    <title>Expense Tracker</title>
  </head>
  <body>
    <h1 style="text-align: center">Expense Tracker</h1>
    <div>
      <label for="expenseAmount">Choose Expense Amount:</label>
      <input type="text" id="expenseAmount" />

      <label for="description">Choose Description:</label>
      <input type="text" id="description" />

      <label for="category">Choose Category:</label>
      <select id="category">
        <option>Food</option>
        <option>Fuel</option>
        <option>Electricity</option>
        <option>Recharge</option>
      </select>

      <button id="addExpense">Add Expense</button>
      <br />
      <button id="razorpay">Buy Premium</button>
      <ul id="expenseList"></ul>
    </div>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.0/axios.min.js"></script>
    <script>
      let expenseInput = document.getElementById("expenseAmount");
      let descriptionInput = document.getElementById("description");
      let categoryInput = document.getElementById("category");

      let addExpenseButton = document.getElementById("addExpense");
      let expenseList = document.getElementById("expenseList");

      let expenses = [];

      let userId = ""; // Declare a variable to store the userId
      // let token = ""; // Declare a variable to store the token

      // Retrieve the userId from local storage
      if (localStorage.userDetails) {
        const userDetails = JSON.parse(localStorage.userDetails);
        userId = userDetails.userId;
        // token = userDetails.token;
      }

      if (localStorage.expenses) {
        expenses = JSON.parse(localStorage.expenses);
      }

      addExpenseButton.addEventListener("click", async function () {
        let expenseAmount = expenseInput.value;
        let description = descriptionInput.value;
        let category = categoryInput.value;

        let expense = {
          amount: expenseAmount,
          description,
          category,
          userId,
          // token,
        };
        console.log(expense);
        try {
          const token = JSON.parse(localStorage.getItem("userDetails")).token;

          const response = await axios.post(
            "http://localhost:8000/expense/create",
            expense,
            {
              headers: {
                Authorization: `Bearer ${token} `,
              },
            }
          );
          console.log(response);
          alert("added expenses successfully to the database");
        } catch (error) {
          console.log(error);
          alert("Request failed with status code 400");
        }

        expenses.push(expense);
        localStorage.expenses = JSON.stringify(expenses);

        expenseInput.value = "";
        descriptionInput.value = "";
        displayExpenses();
      });

      function displayExpenses() {
        expenseList.innerHTML = "";

        for (let i = 0; i < expenses.length; i++) {
          let listItem = document.createElement("li");
          listItem.innerHTML = `Expense Amount: ${expense.amount}, Description: ${expense.description}, Category: ${expense.category}`;

          let deleteButton = document.createElement("button");
          deleteButton.innerHTML = " Delete";
          deleteButton.addEventListener("click", function () {
            expenses.splice(i, 1);
            localStorage.expenses = JSON.stringify(expenses);
            displayExpenses();
          });

          let editButton = document.createElement("button");
          editButton.textContent = " Edit";
          editButton.addEventListener("click", function () {
            expenseInput.value = expense.amount;
            descriptionInput.value = expense.description;
            categoryInput.value = expense.category;
            expenses.splice(i, 1);
            localStorage.expenses = JSON.stringify(expenses);
            displayExpenses();
          });

          listItem.appendChild(deleteButton);
          listItem.appendChild(editButton);
          expenseList.appendChild(listItem);
        }
      }
      displayExpenses();
    </script>
  </body>
</html>


//////////////////////////////


<!DOCTYPE html>
<html lang="en">
  <head>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
      integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N"
      crossorigin="anonymous"
    />
    <title>Expense Tracker</title>
  </head>
  <body>
    <h1 style="text-align: center">Expense Tracker</h1>
    <div>
      <label for="expenseAmount">Choose Expense Amount:</label>
      <input type="text" id="expenseAmount" />

      <label for="description">Choose Description:</label>
      <input type="text" id="description" />

      <label for="category">Choose Category:</label>
      <select id="category">
        <option>Food</option>
        <option>Fuel</option>
        <option>Electricity</option>
        <option>Recharge</option>
      </select>

      <button id="addExpense">Add Expense</button>

      <br />
      <button id="razorpay">Buy Premium</button>
      <p id="message"></p>
      <ul id="expenseList"></ul>
    </div>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.0/axios.min.js"></script>
    <script>
      let expenseInput = document.getElementById("expenseAmount");
      let descriptionInput = document.getElementById("description");
      let categoryInput = document.getElementById("category");

      let addExpenseButton = document.getElementById("addExpense");

      let expenseList = document.getElementById("expenseList");

      let expenses = [];

      let userId = ""; // Declare a variable to store the userId
      // let token = ""; // Declare a variable to store the token
      let isPremiumUser = false; // Declare a variable to store the premium user status

      // Retrieve the userId from local storage
      if (localStorage.userDetails) {
        const userDetails = JSON.parse(localStorage.userDetails);
        userId = userDetails.userId;
        // token = userDetails.token;
        isPremiumUser = userDetails.isPremiumUser || false;
      }

      if (localStorage.expenses) {
        expenses = JSON.parse(localStorage.expenses);
      }

      addExpenseButton.addEventListener("click", async function () {
        let expenseAmount = expenseInput.value;
        let description = descriptionInput.value;
        let category = categoryInput.value;

        let expense = {
          amount: expenseAmount,
          description,
          category,
          userId,
          // token,
        };
        console.log(expense);
        try {
          const token = JSON.parse(localStorage.getItem("userDetails")).token;

          const response = await axios.post(
            "http://localhost:8000/expense/create",
            expense,
            {
              headers: {
                Authorization: `Bearer ${token} `,
              },
            }
          );

          console.log(response.data);
          expense.id = response.data.data.id;
          alert("Added expenses successfully to the database");
        } catch (error) {
          console.log(error);
          alert("Request failed with status code 400");
        }

        expenses.push(expense);
        localStorage.expenses = JSON.stringify(expenses);

        expenseInput.value = "";
        descriptionInput.value = "";
        displayExpenses();
      });

      function displayExpenses() {
        expenseList.innerHTML = "";

        for (let i = 0; i < expenses.length; i++) {
          let expense = expenses[i];
          let listItem = document.createElement("li");
          listItem.innerHTML = `Expense Amount: ${expense.amount}, Description: ${expense.description}, Category: ${expense.category}`;

          let deleteButton = document.createElement("button");
          deleteButton.innerHTML = " Delete";
          deleteButton.addEventListener("click", async function () {
            try {
              const token = JSON.parse(
                localStorage.getItem("userDetails")
              ).token;
              const deleteResponse = await axios.delete(
                `http://localhost:8000/expense/delete/${expense.id}`,
                {
                  headers: {
                    Authorization: `Bearer ${token} `,
                  },
                }
              );
              console.log(deleteResponse);
              alert("delete response from the database successfully");

              // Remove the expense from the expenses array
              expenses.splice(i, 1);

              // Update the local storage
              localStorage.setItem("expenses", JSON.stringify(expenses));

              // Update the displayed expenses
              displayExpenses();
            } catch (error) {
              console.log(error);
            }
          });

          let editButton = document.createElement("button");
          editButton.textContent = " Edit";
          editButton.addEventListener("click", function () {
            // Set the expense details as the current values of the input fields
            expenseInput.value = expense.amount;
            descriptionInput.value = expense.description;
            categoryInput.value = expense.category;

            // Create a save button
            const saveButton = document.createElement("button");
            saveButton.textContent = "Save";

            // Add an event listener to the save button
            saveButton.addEventListener("click", async function () {
              // Get the updated expense details from the input fields
              const updatedAmount = expenseInput.value;
              const updatedDescription = descriptionInput.value;
              const updatedCategory = categoryInput.value;

              // Update the expense object with the updated details
              expense.amount = updatedAmount;
              expense.description = updatedDescription;
              expense.category = updatedCategory;

              try {
                const token = JSON.parse(
                  localStorage.getItem("userDetails")
                ).token;

                const response = await axios.put(
                  `http://localhost:8000/expense/put/${expense.id}`,
                  expense,
                  {
                    headers: {
                      Authorization: `Bearer ${token}`,
                    },
                  }
                );

                console.log(response.data);
                alert("Expense updated successfully in the database");
              } catch (error) {
                console.log(error);
                alert("Request failed with status code 400");
              }

              // Update the local storage
              localStorage.setItem("expenses", JSON.stringify(expenses));

              // Update the displayed expenses
              displayExpenses();

              // Remove the save button and restore the delete and edit buttons
              listItem.removeChild(saveButton);
              listItem.appendChild(deleteButton);
              listItem.appendChild(editButton);
            });

            // Replace the edit button with the save button
            listItem.replaceChild(saveButton, editButton);
          });

          listItem.appendChild(deleteButton);
          listItem.appendChild(editButton);
          expenseList.appendChild(listItem);
        }
      }
      displayExpenses();

      // function parseJwt(token) {
      //   var base64Url = token.split(".")[1];
      //   var base64 = base64Url.replace(/-/g, "+").replace(/_/g, "/");
      //   var jsonPayload = decodeURIComponent(
      //     window
      //       .atob(base64)
      //       .split("")
      //       .map(function (c) {
      //         return "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2);
      //       })
      //       .join("")
      //   );

      //   return JSON.parse(jsonPayload);
      // }

      function showIsPremiumUser() {
        // Remove the "Buy Premium" button
        const buyPremiumButton = document.getElementById("razorpay");

        document.getElementById("message").textContent =
          "You are a premium user";

        const leaderboardButton = document.createElement("button");
        leaderboardButton.textContent = "Show Leaderboard";
        document.body.appendChild(leaderboardButton);

        leaderboardButton.addEventListener("click", function (e) {
          e.preventDefault();
        });

        buyPremiumButton.remove();
      }

      document
        .getElementById("razorpay")
        .addEventListener("click", async function (e) {
          e.preventDefault();

          try {
            const token = JSON.parse(localStorage.getItem("userDetails")).token;
            const response = await axios.get(
              `http://localhost:8000/purchasePremium`,
              {
                headers: {
                  Authorization: `Bearer ${token}`,
                },
              }
            );

            // alert("You are a premium user Now");
            console.log(response);

            const options = {
              key: response.data.key_id,
              orderId: response.data.orderId,
              handler: async function () {
                await axios.post(
                  "http://localhost:8000/updateTransactionStatus",
                  {
                    orderId: options.orderId,
                    paymentId: response.razorpay_paymentId,
                  },
                  {
                    headers: {
                      Authorization: `Bearer ${token}`,
                    },
                  }
                );
                alert("You are a Premium user now");
                // localStorage.setItem("isAdmin", true);
                // if (localStorage.getItem("isAdmin")) {
                //   showIsPremiumUser();
                // }

                // Update the premium user status
                isPremiumUser = true;

                // Update the local storage with the premium user status
                const userDetails = JSON.parse(
                  localStorage.getItem("userDetails")
                );
                userDetails.isPremiumUser = true;
                localStorage.setItem(
                  "userDetails",
                  JSON.stringify(userDetails)
                );

                // Show premium user features
                showIsPremiumUser();

                // const decodedToken = parseJwt(token);
                // console.log(decodedToken);
              },
            };

            const rzp = new Razorpay(options);
            rzp.open();
          } catch (error) {
            console.log(error);
          }
        });

      // Check if the user is already a premium user on page load
      if (isPremiumUser) {
        showIsPremiumUser();
      }
    </script>
  </body>
</html>

// // Update the premium user status // isPremiumUser = true; // // Update the
local storage with the premium user status // const userDetails = JSON.parse( //
localStorage.getItem("userDetails") // ); // userDetails.isPremiumUser = true;
// localStorage.setItem( // "userDetails", // JSON.stringify(userDetails) // );
// showIsPremiumUser();
